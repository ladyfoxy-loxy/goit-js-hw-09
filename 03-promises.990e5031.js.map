{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,kBAClCC,EAAUF,SAASC,cAAc,iBACjCE,EAAYH,SAASC,cAAc,mBAEzC,IAAIG,EA2BJ,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAS,CAACK,SAAAR,E,MAAUC,IAEpBG,EAAO,CAACI,SAAAR,E,MAAUC,GAAO,GAE1BA,EAAM,G,CArCaP,SAASC,cAAc,UAG/Bc,iBAAiB,SAEnC,SAA4BC,GAC1BA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOpB,EAASqB,OACxBC,EAAOF,OAAOjB,EAAQkB,OACtBE,EAASH,OAAOhB,EAAUiB,OAE9B,GAAGF,EAAQ,GAAKG,EAAO,GAAKC,GAAU,EACpC,OAAOC,EAAA1B,GAAS2B,OAAOC,QAAQ,yBAGjC,IAAKrB,EAAW,EAAGA,GAAYkB,EAAQlB,GAAW,EAChDC,EAAcD,EAAUc,GACvBQ,MAAK,EAAEZ,SAAAa,EAAQpB,MAAEA,MAChBgB,EAAA1B,GAAS2B,OAAOI,QAAQ,uBAAqBD,QAAiBpB,MAAU,IAEzEsB,OAAM,EAAEf,SAAAgB,EAAQvB,MAAEA,MACjBgB,EAAA1B,GAAS2B,OAAOO,QAAQ,sBAAoBD,QAAevB,MAAU,IAEvEW,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst addDelay = document.querySelector('[name=\"delay\"]');\nconst addStep = document.querySelector('[name=\"step\"]');\nconst addAmount = document.querySelector('[name=\"amount\"]');\nconst createPromisesBtn = document.querySelector(\"button\");\nlet position;\n\ncreatePromisesBtn.addEventListener(\"click\", onCreatePromiseBtn);\n\nfunction onCreatePromiseBtn(event) {\n  event.preventDefault();\n\n  let delay = Number(addDelay.value);\n  let step = Number(addStep.value);\n  let amount = Number(addAmount.value);\n\n  if(delay < 0 || step < 0 || amount <= 0) {\n    return Notiflix.Notify.warning(\"Add a positive value!\");\n  }\n\n  for (position = 1; position <= amount; position +=1) {\n    createPromise(position, delay)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve ({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n  return promise;\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$addDelay","document","querySelector","$47d4ff9957288465$var$addStep","$47d4ff9957288465$var$addAmount","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position3","delay","Promise","resolve","reject","setTimeout","Math","random","position","addEventListener","event","preventDefault","delay1","Number","value","step","amount","$parcel$interopDefault","Notify","warning","then","position1","success","catch","position2","failure"],"version":3,"file":"03-promises.990e5031.js.map"}